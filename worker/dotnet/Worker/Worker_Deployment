kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: 'http://bitbucket.org/dmoore44/voting-app.git'
    deployment.kubernetes.io/revision: '2'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"worker-app:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"worker-app\")].image"}]
  selfLink: /apis/apps/v1/namespaces/sample-app-command/deployments/worker-app
  resourceVersion: '15382764'
  name: worker-app
  uid: 26fdc7aa-9e8d-403f-8723-4b801ae8426b
  creationTimestamp: '2020-06-24T17:14:56Z'
  generation: 2
  namespace: sample-app-command
  labels:
    app: worker-app
    app.kubernetes.io/component: worker-app
    app.kubernetes.io/instance: worker-app
    app.kubernetes.io/name: dotnet
    app.kubernetes.io/part-of: example-voting-app
    app.openshift.io/runtime: dotnet
    app.openshift.io/runtime-version: '2.1'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker-app
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: worker-app
        deploymentconfig: worker-app
    spec:
      containers:
        - name: worker-app
          image: >-
            image-registry.openshift-image-registry.svc:5000/sample-app-command/worker-app@sha256:d1f1e8cfdb22b305185a8d45ec06d7039d526e9e4cc57631af23f73a6a426894
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: dbpasswd
              valueFrom:
                secretKeyRef:
                  name: db
                  key: database-password
            - name: redispasswd
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: database-password
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 2
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Available
      status: 'True'
      lastUpdateTime: '2020-06-24T17:15:48Z'
      lastTransitionTime: '2020-06-24T17:15:48Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2020-06-24T17:15:48Z'
      lastTransitionTime: '2020-06-24T17:14:56Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "worker-app-5d9f47d88f" has successfully progressed.
